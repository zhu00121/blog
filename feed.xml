<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://zhu00121.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://zhu00121.github.io/blog/" rel="alternate" type="text/html" /><updated>2021-02-01T07:13:38-06:00</updated><id>https://zhu00121.github.io/blog/feed.xml</id><title type="html">Yi’ 1st blog</title><subtitle>This blog records my personal experience in ML/DL</subtitle><entry><title type="html">Cross Entropy In Deep Learning</title><link href="https://zhu00121.github.io/blog/2021/02/01/Cross-entropy-in-Deep-Learning.html" rel="alternate" type="text/html" title="Cross Entropy In Deep Learning" /><published>2021-02-01T00:00:00-06:00</published><updated>2021-02-01T00:00:00-06:00</updated><id>https://zhu00121.github.io/blog/2021/02/01/Cross-entropy--in-Deep-Learning</id><author><name></name></author><summary type="html">Why CE?</summary></entry><entry><title type="html">Cross Entropy In Deep Learning</title><link href="https://zhu00121.github.io/blog/2021/01/31/Cross-entropy-in-Deep-learning.html" rel="alternate" type="text/html" title="Cross Entropy In Deep Learning" /><published>2021-01-31T00:00:00-06:00</published><updated>2021-01-31T00:00:00-06:00</updated><id>https://zhu00121.github.io/blog/2021/01/31/Cross-entropy-in-Deep-learning</id><author><name></name></author><summary type="html">Why CE?</summary></entry><entry><title type="html">Why we need SGD?</title><link href="https://zhu00121.github.io/blog/2021/01/31/Blog1_SGD.html" rel="alternate" type="text/html" title="Why we need SGD?" /><published>2021-01-31T00:00:00-06:00</published><updated>2021-01-31T00:00:00-06:00</updated><id>https://zhu00121.github.io/blog/2021/01/31/Blog1_SGD</id><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Access Data And Construct A Datablock With Fastai</title><link href="https://zhu00121.github.io/blog/2021/01/23/Access-data-and-construct-a-datablock-with-fastai.html" rel="alternate" type="text/html" title="Access Data And Construct A Datablock With Fastai" /><published>2021-01-23T00:00:00-06:00</published><updated>2021-01-23T00:00:00-06:00</updated><id>https://zhu00121.github.io/blog/2021/01/23/Access-data-and-construct-a-datablock-with-fastai</id><author><name></name></author><summary type="html">Access data and construct a datablock with fastai First of all, we need to set the path to our dataset and read it in with pandas. Here I’m using a dataframe as an example: df = pd.read_csv('filepath') df.head() To access the fname only, we could use DataFrame.iloc or df['fname'] df.iloc[:,0] df['fname'] Now for classification problems, we always want our data labelled and have it divided into training and validation set. The Datablock object of Fastai can do this automatically for us. The Datablock is a generic container to quickly build Datasets and DataLoaders: dblock = Datablock() dblock? We could then build a datasets object with a source. With ` .train and .valid`, it randomly splits the whole dataset into training set with 80% of data and validation set with 20% of data. dsets = dblock.datasets(df) len(dsets.train),len(dsets.valid) #number of training and validation sets x, y = dsets[0] x,y What if we want the file name to be something else and the labels to be split up? def get_x(r): return r['fname'] def get_y(r): return r['labels'].split('') dblock = Datablock(blocks = (ImageBlock,MultiCategoryBlcok) ,get_x = get_x,get_y = get_y) #To have it opened as image with multilabel dsets = dblock.datasets(df) dsets.train[0] Now we can put our datasetsinto dataloaders. What dataloadesrsdoes is basically collating the items from datasetsinto a mini batch. While we are doing so, we need to also make sure that the images are of the same size. dblock = Datablock.(blocks(ImageBlock,MultiCategoryBlcok), get_x = get_x,get_y = get_y, item_tfms = RandomResizedCrop(128,min_scale = 0.35)) dls = dblock.Dataloaders(df) Display a few: dls.show_batch(nrows=3, ncols=3)</summary></entry><entry><title type="html">Why we need SGD?</title><link href="https://zhu00121.github.io/blog/2021/01/15/Blog1SGD.html" rel="alternate" type="text/html" title="Why we need SGD?" /><published>2021-01-15T00:00:00-06:00</published><updated>2021-01-15T00:00:00-06:00</updated><id>https://zhu00121.github.io/blog/2021/01/15/Blog1SGD</id><author><name></name></author><summary type="html"></summary></entry></feed>